# import * from './generated/prisma.graphql'

type SuccessMessage {
    message: String
}

type Mutation {
    
    # Create the mutation for creating new users.
    signup(
        email: String!
        password: String!
        verifyPassword: String!
        username: String!
    ): User!

    # Create mutation for logging in new user
    signin(
        email: String!
        password: String!
    ): User!

    # Create mutation that will handle creating a reset token for password resets.
    requestReset(email: String!): SuccessMessage

    # Reset the password
    resetPassword(
        resetToken: String!
        password: String!
        verifyPassword: String!
    ): User!

    # Simple sign-out mutation
    signout: SuccessMessage

    # Update users' permissions
    updatePermissions(
        permissions: [Permission]
        userId: ID!
    ): User

    # Allow users to change their password
    changePassword(
        oldPassword: String!
        newPassword: String!
        verifyNewPassword: String!
    ): User
}

type Query {
    # Get the current user if logged in.
    me: User

    # Pull all users for updating permissions
    users: [User]!

    # Query for all games
    games(
        where: GameWhereInput
        orderBy: GameOrderByInput
    ): [Game]!

    # Query for all characters in a game
    characters(
        where: CharacterWhereInput
        orderBy: CharacterOrderByInput
    ): [Character]!
}